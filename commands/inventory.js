const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const Database = require('../database/database');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('inventory')
        .setDescription('Xem kho ƒë·ªì c·ªßa b·∫°n')
        .addUserOption(option =>
            option.setName('user')
                .setDescription('Ng∆∞·ªùi d√πng ƒë·ªÉ xem inventory')
                .setRequired(false)),
    
    async execute(interaction) {
        const targetUser = interaction.options.getUser('user') || interaction.user;
        const userId = targetUser.id;
        
        try {
            const inventory = await Database.getInventory(userId);
            
            const embed = new EmbedBuilder()
                .setTitle(`üéí Kho ƒë·ªì c·ªßa ${targetUser.displayName}`)
                .setColor('#8B4513')
                .setTimestamp();
            
            if (!inventory || Object.keys(inventory).length === 0) {
                embed.setDescription('Kho ƒë·ªì tr·ªëng!');
                return await interaction.reply({ embeds: [embed] });
            }
            
            let description = '';
            
            // Mining items
            if (inventory.pickaxe) {
                const pickaxeLevel = inventory.pickaxe;
                const pickaxeNames = ['Cu·ªëc G·ªó', 'Cu·ªëc ƒê√°', 'Cu·ªëc S·∫Øt', 'Cu·ªëc V√†ng', 'Cu·ªëc Kim C∆∞∆°ng'];
                description += `‚õèÔ∏è **${pickaxeNames[pickaxeLevel - 1] || 'Cu·ªëc G·ªó'}** (Level ${pickaxeLevel})\n`;
            }
            
            // Ores
            const ores = ['coal', 'iron', 'gold', 'diamond'];
            const oreNames = { coal: 'ü™® Than', iron: '‚öôÔ∏è S·∫Øt', gold: 'üü° V√†ng', diamond: 'üíé Kim C∆∞∆°ng' };
            
            for (const ore of ores) {
                if (inventory[ore] && inventory[ore] > 0) {
                    description += `${oreNames[ore]}: ${inventory[ore]}\n`;
                }
            }
            
            if (!description) {
                description = 'Kho ƒë·ªì tr·ªëng!';
            }
            
            embed.setDescription(description);
            
            await interaction.reply({ embeds: [embed] });
            
        } catch (error) {
            console.error('Inventory command error:', error);
            await interaction.reply({ 
                content: '‚ùå C√≥ l·ªói x·∫£y ra khi xem inventory!', 
                ephemeral: true 
            });
        }
    }
};